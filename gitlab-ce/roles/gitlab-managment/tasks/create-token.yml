---
- name: Get GitLab CSRF token
  ansible.builtin.uri:
    url: "{{ gitlab_url }}/users/sign_in"
    method: GET
    return_content: yes
    status_code: 200
  register: login_page
  no_log: true
  tags: token

- name: Extract CSRF token
  ansible.builtin.set_fact:
    csrf_token: "{{ login_page.content | regex_search('csrf-token\" content=\"([^\"]+)', '\\1') | first }}"
  tags: token

- name: Authenticate to GitLab
  ansible.builtin.uri:
    url: "{{ gitlab_url }}/users/sign_in"
    method: POST
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    body_format: form-urlencoded
    body:
      authenticity_token: "{{ csrf_token }}"
      user[login]: "{{ gitlab_admin_user }}"
      user[password]: "{{ gitlab_admin_password }}"
      user[remember_me]: "0"
    status_code: 302
    follow_redirects: no
    validate_certs: "{{ gitlab_validate_certs | default(false) }}"
  register: auth_result
  no_log: true
  tags: token

- name: Create personal access token
  ansible.builtin.uri:
    url: "{{ gitlab_url }}/api/v4/users/{{ gitlab_admin_user_id }}/personal_access_tokens"
    method: POST
    headers:
      Cookie: "_gitlab_session={{ auth_result.cookies._gitlab_session }}"
      Content-Type: "application/json"
    body:
      name: "{{ token_name }}"
      scopes: "{{ token_scopes }}"
      expires_at: "{{ token_expiry_date }}"
    body_format: json
    status_code: 201
    validate_certs: "{{ gitlab_validate_certs | default(false) }}"
  register: token_result
  no_log: true
  tags: token

- name: Set access token fact
  ansible.builtin.set_fact:
    gitlab_access_token: "{{ token_result.json.token }}"
  no_log: true
  tags: token